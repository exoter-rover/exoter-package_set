## Define here packages that are not dependent on oroGen
cmake_package 'drivers/gnss_trimble' #GNSS driver
cmake_package 'exoter/exoter_kinematics' #Dedicated ExoTer Kinematics library
cmake_package 'exoter/exoter_dynamics' #Dedicated ExoTer Dynamics library
cmake_package 'control/locomotion_control' #This library is an specialization of generic_rover_manoeuvre
cmake_package 'drivers/platform_driver' #Elmo driver
cmake_package 'control/generic_rover_manoeuvre' #Generic rover manoeuvre to map 2D motion commands to required joint commands
cmake_package 'drivers/ar_tracking' #Advanced Realtime Tracking System
cmake_package 'drivers/telemetry_telecommand' #Dedicated ExoTer Data Handling library to talk to RAT GCS

## ESA-NPI localization
cmake_package 'slam/localization' #Localization library
cmake_package 'slam/threed_odometry' #Generic 3D-Kinematics Odometry
cmake_package 'slam/gp_odometry' #GP odometry

cmake_package 'perception/cpu_tsdf' #TSDF in CPU
cmake_package 'slam/gtsam' #Georgia Tech Smooth and Mapping
cmake_package 'slam/envire_sam' #Envire wrapper for the Georgia Tech Smooth and Mapping

#if !has_pcan_api? # defined in init.rb
#    Autoproj.manifest.add_exclusion "control/platform_driver", "Peak PCI Express Mini needed for platform_driver is not installed!. Install it manually: http://www.peak-system.com/fileadmin/media/linux/index.htm"
#end

# Kernel driver for RTD PCIE UARTs
import_package 'drivers/exar_pcie_uart' do |pkg|
    pkg.post_install do
        pkg.message "Importing package PCI Express UART for the Trimble BD970 RTD Module of the PC-104"
        # Autobuild::Subprocess.run(pkg, 'build', 'sudo make build', :working_directory => pkg.srcdir)
    end
end

import_package 'drivers/pcan_pcie_mini' do |pkg|
    pkg.post_import do
        Autobuild::Subprocess.run(pkg, 'build', 'make NET=NO', :working_directory => pkg.srcdir)
    end
    pkg.post_install do
        pkg.message "Installing package PCI Express Mini"
        Autobuild::Subprocess.run(pkg, 'install', "mkdir -p ${AUTOPROJ_CURRENT_ROOT}/install/include/ && cp driver/pcan.h ${AUTOPROJ_CURRENT_ROOT}/install/include/", :working_directory => pkg.srcdir)

        # For the ExoTeR rover with sudo rights
        #Autobuild::Subprocess.run(pkg, 'install', 'sudo make install', :working_directory => pkg.srcdir)
        #Autobuild::Subprocess.run(pkg, 'install', 'sudo modprobe pcan')
    end
end

bundle_package 'bundles/exoter'

